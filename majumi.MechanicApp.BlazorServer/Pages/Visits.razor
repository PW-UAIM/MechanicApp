@page "/visits"

@inject IModel model
@inject IController controller
@inject DialogService DialogService
@inject NavigationManager NavManager

<div class="col-lg-10 col-12 text-center mx-auto">
    <p>
        <br>
    </p>
    <h2 class="mb-1">Przeglądy aut</h2>
    <br>
</div>
<div class="container-fluid py-5">
    <div class="container">
        <RadzenDialog />
        <RadzenScheduler @ref=@scheduler SlotRender=@OnSlotRender class=" ms-lg-auto shadow-lg img-fluid site-footer-bottom" style="height: 768px; margin:0;" TItem="VisitData" Data=@model.VisitList StartProperty="ServiceDate" EndProperty="ServiceDate"
                         TextProperty="ServiceType" SelectedIndex="0"
                         AppointmentSelect=@OnAppointmentSelect AppointmentRender=@OnAppointmentRender>
            <RadzenMonthView />
        </RadzenScheduler>
        <p> </p>
    </div>

</div>


@code {
    RadzenScheduler<VisitData> scheduler;

    protected override void OnInitialized()
    {
        //Check if client is logged in
        if (model.MechanicID == 0 || model.LoginConfirmation == false)
        {
            NavManager.NavigateTo("/login");
        }
    }

    private async Task LoadVisits()
    {
        //model.MechanicID = 1;
        await controller.LoadVisitsAsync();
        Console.WriteLine(model.VisitList.Count);
        await scheduler.Reload();
    }

    protected async override Task OnInitializedAsync()
    {
        await LoadVisits();
    }


    void OnSlotRender(SchedulerSlotRenderEventArgs args)
    {
        // Highlight today in month view
        if (args.View.Text == "Month" && args.Start.Date == DateTime.Today)
        {
            args.Attributes["style"] = "background: rgba(0,220,40,.2);";
        }

        // Highlight working hours (8-20)
        if ((args.View.Text == "Week" || args.View.Text == "Day") && args.Start.Hour >= 8 && args.Start.Hour <= 20)
        {
            args.Attributes["style"] = "background: rgba(0,220,40,.2);";
        }
    }

    async Task OnAppointmentSelect(SchedulerAppointmentSelectEventArgs<VisitData> args)
    {
        Console.WriteLine("Press");
        model.SearchedVisitID = args.Data.VisitID;
        await controller.GetVisitAsync();
        await DialogService.OpenAsync<ShowVisit>("Szczegóły wizyty");

        await scheduler.Reload();
    }

    void OnAppointmentRender(SchedulerAppointmentRenderEventArgs<VisitData> args)
    {
        //if (args.Data.Text == "Birthday")
        //{
        //    args.Attributes["style"] = "background: red";
        //}
    }
}